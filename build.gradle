import org.apache.tools.ant.filters.*
import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.2.0'
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.amwebexpert'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    // https://www.baeldung.com/spring-rest-openapi-documentation
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.6'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-security', version: '1.5.6'

    implementation 'org.flywaydb:flyway-core'
    implementation 'com.h2database:h2'

    // https://mvnrepository.com/artifact/org.webjars
    implementation group: 'org.webjars', name: 'jquery', version: '3.6.0'
    implementation group: 'org.webjars', name: 'bootstrap', version: '4.6.0-1'
    implementation group: 'org.webjars', name: 'webjars-locator-core', version: '0.46'
    implementation group: 'org.webjars', name: 'js-cookie', version: '2.1.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

processResources {
    from('src/main/resources') {
        include 'application.yml'

        String buildDate = new SimpleDateFormat('yyyy-MM-dd').format(new Date())
        println "Start filtering: buildDate = $buildDate"
        filter ReplaceTokens, tokens: [
                "buildDate": buildDate,
                "ENV_VAR_WEB_APP_BASE_URL": System.getenv("ENV_VAR_WEB_APP_BASE_URL"),
                "ENV_VAR_CLIENT_ID_GITHUB": System.getenv("ENV_VAR_CLIENT_ID_GITHUB"),
                "ENV_VAR_CLIENT_SECRET_GITHUB": System.getenv("ENV_VAR_CLIENT_SECRET_GITHUB"),
                "ENV_VAR_CLIENT_ID_FACEBOOK": System.getenv("ENV_VAR_CLIENT_ID_FACEBOOK"),
                "ENV_VAR_CLIENT_SECRET_FACEBOOK": System.getenv("ENV_VAR_CLIENT_SECRET_FACEBOOK"),
                "ENV_VAR_CLIENT_ID_GOOGLE": System.getenv("ENV_VAR_CLIENT_ID_GOOGLE"),
                "ENV_VAR_CLIENT_SECRET_GOOGLE": System.getenv("ENV_VAR_CLIENT_SECRET_GOOGLE"),
        ]
        println "End filtering."
    }
}

apply plugin: 'com.google.cloud.tools.appengine'

appengine {  // App Engine tasks configuration
    deploy {   // deploy configuration
        projectId = 'esighclouddemo' // gcloud config set project
        version = 'GCLOUD_CONFIG'   // gcloud to generate a version
        stopPreviousVersion = true
        promote = true
    }
}

